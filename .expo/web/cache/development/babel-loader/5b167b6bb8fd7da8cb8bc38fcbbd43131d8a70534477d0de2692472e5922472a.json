{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { connect } from 'react-redux';\nimport { fetchDataAction, addDataAction, updateDataAction, deleteDataAction } from \"../features/actions\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListScreen = function ListScreen(_ref) {\n  var navigation = _ref.navigation,\n    data = _ref.data,\n    fetchData = _ref.fetchData,\n    addData = _ref.addData,\n    updateData = _ref.updateData,\n    deleteData = _ref.deleteData;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    newItemText = _useState2[0],\n    setNewItemText = _useState2[1];\n  useEffect(function () {\n    fetchData();\n  }, []);\n  console.log('data massage:', data.massage);\n  var goToDetailScreen = function goToDetailScreen(item) {\n    navigation.navigate('Detail', {\n      item: item,\n      onEdit: function onEdit(editedItem) {\n        updateData(editedItem);\n        fetchData();\n      },\n      onDelete: function onDelete(id) {\n        deleteData(id);\n        fetchData();\n      }\n    });\n  };\n  var handleAddItem = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (newItemText) {\n        var newItem = {\n          content: newItemText\n        };\n        yield addData(newItem);\n        setNewItemText('');\n        fetchData();\n      }\n    });\n    return function handleAddItem() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(TextInput, {\n      placeholder: \"New item name\",\n      value: newItemText,\n      onChangeText: setNewItemText,\n      style: {\n        borderWidth: 1,\n        borderColor: 'gray',\n        margin: 10,\n        padding: 10,\n        fontSize: 16\n      }\n    }), _jsx(Button, {\n      title: \"Add\",\n      onPress: handleAddItem\n    }), _jsx(FlatList, {\n      data: data.massage,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return goToDetailScreen(item);\n          },\n          style: {\n            borderWidth: 1,\n            borderColor: 'gray',\n            margin: 10,\n            padding: 10,\n            borderRadius: 10\n          },\n          children: _jsx(View, {\n            style: {\n              flexDirection: 'row'\n            },\n            children: _jsxs(View, {\n              style: {\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: [_jsx(Text, {\n                children: item.content\n              }), _jsx(Text, {\n                children: item.namwe\n              })]\n            })\n          })\n        });\n      }\n    })]\n  });\n};\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    data: state.data\n  };\n};\nvar mapDispatchToProps = {\n  fetchData: fetchDataAction,\n  addData: addDataAction,\n  updateData: updateDataAction,\n  deleteData: deleteDataAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ListScreen);","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","Button","TextInput","Image","connect","fetchDataAction","addDataAction","updateDataAction","deleteDataAction","jsx","_jsx","jsxs","_jsxs","ListScreen","_ref","navigation","data","fetchData","addData","updateData","deleteData","_useState","_useState2","_slicedToArray","newItemText","setNewItemText","console","log","massage","goToDetailScreen","item","navigate","onEdit","editedItem","onDelete","id","handleAddItem","_ref2","_asyncToGenerator","newItem","content","apply","arguments","children","placeholder","value","onChangeText","style","borderWidth","borderColor","margin","padding","fontSize","title","onPress","keyExtractor","toString","renderItem","_ref3","borderRadius","flexDirection","alignItems","justifyContent","namwe","mapStateToProps","state","mapDispatchToProps"],"sources":["D:/BaiTapLonAdroi/thi_navigation_redux_api_2/src/components/ListScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity, Button, TextInput, Image } from 'react-native';\r\nimport { connect } from 'react-redux';\r\nimport { fetchDataAction, addDataAction, updateDataAction, deleteDataAction } from '../features/actions';\r\n\r\nconst ListScreen = ({ navigation, data, fetchData, addData, updateData, deleteData }) => {\r\n  const [newItemText, setNewItemText] = useState('');\r\n  // const [newItemImage, setNewItemImage] = useState('');\r\n  // const [newItemPrice, setNewItemPrice] = useState('');\r\n  // const [newItemType, setNewItemType] = useState('');\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log('data massage:', data.massage);\r\n  const goToDetailScreen = (item) => {\r\n    navigation.navigate('Detail', {\r\n      item,\r\n      onEdit: (editedItem) => {\r\n        updateData(editedItem);\r\n        fetchData(); // Lấy dữ liệu cập nhật sau khi chỉnh sửa\r\n      },\r\n      onDelete: (id) => {\r\n        deleteData(id);\r\n        fetchData(); // Lấy dữ liệu cập nhật sau khi xoá\r\n      },\r\n    });\r\n  };\r\n  const handleAddItem = async () => {\r\n    if (newItemText) {\r\n      const newItem = {\r\n        content: newItemText,\r\n        // image: newItemImage,\r\n        // price: newItemPrice,\r\n        // type: newItemType,\r\n      };\r\n      await addData(newItem);\r\n      setNewItemText('');\r\n      // setNewItemImage('');\r\n      // setNewItemPrice('');\r\n      // setNewItemType('');\r\n      fetchData(); // Lấy dữ liệu cập nhật sau khi thêm\r\n    }\r\n  };\r\n  return (\r\n    <View>\r\n      <TextInput\r\n        placeholder=\"New item name\"\r\n        value={newItemText}\r\n        onChangeText={setNewItemText}\r\n        style={{ borderWidth: 1, borderColor: 'gray', margin: 10, padding: 10 ,fontSize:16}}\r\n      />\r\n      {/* <TextInput\r\n        placeholder=\"New link image\"\r\n        value={newItemImage}\r\n        onChangeText={setNewItemImage}\r\n        style={{ borderWidth: 1, borderColor: 'gray', margin: 10, padding: 10 ,fontSize:16}}\r\n      />\r\n      <TextInput\r\n        placeholder=\"New item price\"\r\n        value={newItemPrice}\r\n        onChangeText={setNewItemPrice}\r\n        style={{ borderWidth: 1, borderColor: 'gray', margin: 10, padding: 10 ,fontSize:16}}\r\n      />\r\n      <TextInput\r\n        placeholder=\"New item type\"\r\n        value={newItemType}\r\n        onChangeText={setNewItemType}\r\n        style={{ borderWidth: 1, borderColor: 'gray', margin: 10, padding: 10 ,fontSize:16}}\r\n      /> */}\r\n      <Button title=\"Add\" onPress={handleAddItem} />\r\n\r\n      <FlatList\r\n        data={data.massage}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity \r\n            onPress={() => goToDetailScreen(item)}\r\n            style={{ borderWidth: 1, borderColor: 'gray', margin: 10, padding: 10 ,borderRadius:10}}  \r\n          >\r\n            <View style={{flexDirection:'row'}}>\r\n              \r\n              <View style={{alignItems:'center',justifyContent:'center'}}>\r\n                <Text>{item.content}</Text>\r\n                <Text>{item.namwe}</Text>\r\n               \r\n              </View>\r\n            </View>\r\n            \r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n    </View>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  data: state.data,\r\n});\r\nconst mapDispatchToProps = {\r\n  fetchData: fetchDataAction,\r\n  addData: addDataAction,\r\n  updateData: updateDataAction,\r\n  deleteData: deleteDataAction,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListScreen);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}